/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import com.mysql.jdbc.PreparedStatement;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Carolina Moutella - 2015201773
 */
public class JFrame_PDV extends javax.swing.JFrame {

    /**
     * Creates new form JFrameAPS
     */
    public JFrame_PDV() {
        initComponents();
        ComboBoxCliente();
        ComboBoxLocalidade();
        ComboBoxProduto();
    }

    /*
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jCliente = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLocalidade = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jProduto = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jQuantidade = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextDescricao = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jIncluirProduto = new javax.swing.JButton();
        jExcluir = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jItens = new javax.swing.JTable();
        jValorTotal = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jVender = new javax.swing.JButton();
        jCancelarVenda = new javax.swing.JButton();
        jSair = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("CAIXA LIVRE");

        jCliente.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jCliente.setForeground(new java.awt.Color(102, 102, 102));
        jCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cliente" }));
        jCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClienteActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 153));
        jLabel2.setText("Cliente:");

        jLocalidade.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLocalidade.setForeground(new java.awt.Color(102, 102, 102));
        jLocalidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Localidade" }));
        jLocalidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLocalidadeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 153));
        jLabel3.setText("Localidade:");

        jProduto.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jProduto.setForeground(new java.awt.Color(102, 102, 102));
        jProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione" }));
        jProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jProdutoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 153));
        jLabel4.setText("Produto:");

        jQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jQuantidadeActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 153));
        jLabel5.setText("Quantidade:");

        jTextDescricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextDescricaoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 153));
        jLabel6.setText("Descrição do Produto:");

        jIncluirProduto.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jIncluirProduto.setForeground(new java.awt.Color(102, 102, 102));
        jIncluirProduto.setText("Incluir Produto");
        jIncluirProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jIncluirProdutoMouseClicked(evt);
            }
        });
        jIncluirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jIncluirProdutoActionPerformed(evt);
            }
        });

        jExcluir.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jExcluir.setForeground(new java.awt.Color(102, 102, 102));
        jExcluir.setText("Excluir Produto");
        jExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jExcluirActionPerformed(evt);
            }
        });

        jItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Produto", "Quantidade", "Valor Unitário", "Valor total"
            }
        ));
        jItens.setRowSelectionAllowed(false);
        jScrollPane3.setViewportView(jItens);

        jValorTotal.setBackground(new java.awt.Color(196, 0, 0));
        jValorTotal.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jValorTotal.setForeground(new java.awt.Color(240, 240, 240));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 153));
        jLabel7.setText("Total a pagar:");

        jVender.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jVender.setText("Vender");
        jVender.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jVenderMouseClicked(evt);
            }
        });
        jVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jVenderActionPerformed(evt);
            }
        });

        jCancelarVenda.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jCancelarVenda.setForeground(new java.awt.Color(102, 102, 102));
        jCancelarVenda.setText("Cancelar Venda");
        jCancelarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCancelarVendaActionPerformed(evt);
            }
        });

        jSair.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jSair.setForeground(new java.awt.Color(102, 102, 102));
        jSair.setText("Fechar");
        jSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jTextDescricao, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)
                                .addComponent(jProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addGap(197, 197, 197))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(199, 199, 199))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLocalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(164, 164, 164)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jIncluirProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jSair, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(39, 39, 39)
                            .addComponent(jCancelarVenda)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jVender, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLocalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jIncluirProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jVender, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCancelarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSair))))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClienteActionPerformed
        //PREPARAR COMBOBOX CLIENTE
    }//GEN-LAST:event_jClienteActionPerformed

    private void ComboBoxCliente(){
        try{
            //Registrar Drive JDBC
            Class.forName("com.mysql.jdbc.Driver");
            
            //Abrindo a conexão
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/pdv","root","root");
            
            String sql="select * from Cliente";
            PreparedStatement pst;
            pst = (PreparedStatement) conn.prepareStatement(sql);
            ResultSet rs;
            rs=pst.executeQuery();
            
            while(rs.next()){
                String cliente = rs.getString("nome");
                jCliente.addItem(cliente);
            }
            
            
        }catch(ClassNotFoundException | SQLException e){
            JOptionPane.showMessageDialog (null, ERROR);
        }
    }
    
    private void jQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jQuantidadeActionPerformed

    private void jLocalidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLocalidadeActionPerformed
        // PREPARAR COMBOBOX LOCALIDADE
    }//GEN-LAST:event_jLocalidadeActionPerformed
    
    private void ComboBoxLocalidade(){
        try{
            //Registrar Drive JDBC
            Class.forName("com.mysql.jdbc.Driver");
            
            //Abrindo a conexão
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/pdv","root","root");
            
            String sql="select * from Localidade";
            PreparedStatement pst;
            pst = (PreparedStatement) conn.prepareStatement(sql);
            ResultSet rs;
            rs=pst.executeQuery();
            
            while(rs.next()){
                String localidade = rs.getString("nome");
                jLocalidade.addItem(localidade);
            }
                        
        }catch(ClassNotFoundException | SQLException e){
            JOptionPane.showMessageDialog (null, ERROR);
        }
    }
    
    private void jProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jProdutoActionPerformed
        //MOSTRAR_DESCRICAO_PRODUTO
        try{
            //Registrar Drive JDBC
            Class.forName("com.mysql.jdbc.Driver");
            
            //Abrindo a conexão
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/pdv","root","root");
        
            String prod = jProduto.getSelectedItem().toString();
            String query = "select * from Produto where CODPROD like ?";
            PreparedStatement pst;
            pst = (PreparedStatement) conn.prepareStatement(query);
            pst.setString(1,"%" + prod + "%");
            ResultSet rs = pst.executeQuery();
            
            jTextDescricao.setText(rs.getString("descricao"));
                    
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(JFrame_PDV.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jProdutoActionPerformed
    // PREPARAR COMBOBOX PRODUTO (codprod)
    private void ComboBoxProduto(){
        try{
            //Registrar Drive JDBC
            Class.forName("com.mysql.jdbc.Driver");
            
            //Abrindo a conexão
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/pdv","root","root");
            
            String sql="select * from Produto";
            PreparedStatement pst;
            pst = (PreparedStatement) conn.prepareStatement(sql);
            ResultSet rs;
            rs=pst.executeQuery();
            
            while(rs.next()){
                String produto = rs.getString("codprod");
                jProduto.addItem(produto);
            }
                        
        }catch(ClassNotFoundException | SQLException e){
            JOptionPane.showMessageDialog (null, ERROR);
        }
    }
       
    private void jIncluirProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jIncluirProdutoMouseClicked
        // REGISTRAR PRODUTO
        try{
            //Registrar Drive JDBC
            Class.forName("com.mysql.jdbc.Driver");
            
            //Abrindo a conexão
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/pdv","root","root");
        
            //INDENTIFICAR_PRODUTO
            Object prod = jProduto.getSelectedItem();
            String queryprod = "select * from Produto where CODPROD like ?";
            PreparedStatement pstprod;
            pstprod = (PreparedStatement) conn.prepareStatement(queryprod);
            pstprod.setString(1,"%" + prod + "%");
            ResultSet rsprod = pstprod.executeQuery();
            
            //IDENTIFICAR_CLIENTE
            Object cli = jCliente.getSelectedItem();
            String querycli = "select CODCLI from Cliente where NAME like ?";
            PreparedStatement pstcli;
            pstcli = (PreparedStatement) conn.prepareStatement(querycli);
            pstcli.setString(1, "%" + cli + "%");
            ResultSet rscli = pstcli.executeQuery();
            
            //IDENTIFICAR DESCONTO
            String querydesc = "select * from Desconto where codprod = ?";
            PreparedStatement pstdesc;
            pstdesc = (PreparedStatement) conn.prepareStatement(querydesc);
            pstdesc.setString(1, "%" + prod + "%");
            ResultSet rsdesc = pstdesc.executeQuery();
            
            //VERIFICAR_ESTOQUE
            int qnt_estoque = Integer.parseInt(rsprod.getString("QTD_ESTOQUE"));
            int qnt = Integer.parseInt(jQuantidade.getText());
            if (qnt>qnt_estoque){
                JOptionPane.showMessageDialog(rootPane, "Estoque insuficiente.");
            }
            else{
                
                //CALCULAR_SUBTOTAL
                double valor = Double.parseDouble(rsprod.getString("PRECO_UNITARIO"));
                double subtotal = valor * qnt;
                
                //CALCULAR_DESCONTO1
                
                int desconto;
                
                if(Integer.parseInt(rscli.getString("BONUS"))>=100){
                    java.sql.Statement st = conn.createStatement();
                    String querydesc2 = "select PERCENTUAL from Desconto Where CodProd = "
                                       + Integer.parseInt(rsprod.getString("codprod")) 
                                       + "AND QTD_MIN <= " + Integer.parseInt(jQuantidade.getText())
                                       + "AND QTD MAX >= " + Integer.parseInt(jQuantidade.getText());
                    ResultSet querycheck = st.executeQuery(querydesc2);

                    while (querycheck.next()){
                        desconto = Integer.parseInt(rsdesc.getString("PERCENTUAL"));
                        subtotal = subtotal - (subtotal*desconto/100);
                        JOptionPane.showMessageDialog(rootPane, "Desconto aplicado no produto");
                        
                        //REMOVER_PONTOS_BONUS
                        st.executeUpdate("update Cliente set Bonus = Bonus - 100 where codcli like "
                                         + Integer.parseInt(rscli.getString("codcli"))+ "')"
                                         );
                    }
                    
                    
                /*  if(Integer.parseInt(rsdesc.getString("QTD_MIN"))<= Integer.parseInt(jQuantidade.getText()) && Integer.parseInt(rsdesc.getString("QTD_MAX"))>=Integer.parseInt(jQuantidade.getText())){
                        desconto = Integer.parseInt(rsdesc.getString("PERCENTUAL"));
                        subtotal = subtotal - (subtotal*desconto/100);
                        JOptionPane.showMessageDialog(rootPane, "Desconto aplicado no produto");
                        
                        //REMOVER_PONTOS_BONUS
                        int bonus = Integer.parseInt(rscli.getString("BONUS"));
                        bonus = bonus - 100;
                        java.sql.Statement st = conn.createStatement();
                        st.executeUpdate("insert into Cliente (BONUS) value" + bonus + "')");
                       
                        java.sql.Statement st = conn.createStatement();
                        st.executeUpdate("update Cliente set Bonus = Bonus - 100 where codcli like "
                                         + Integer.parseInt(rscli.getString("codcli"))+ "')"
                                         );
                    }   */
                }
                else{
                    
                }
            
                jItens.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
                DefaultTableModel modelo = (DefaultTableModel) jItens.getModel();
                while (rsprod.next()){
                    modelo.addRow(new Object[]{
                                                rsprod.getString("DESCRICAO"),
                                                jQuantidade.getText(),
                                                rsprod.getString("PRECO_UNITARIO"),
                                                subtotal
                    });
                }                
            }
            
            //CALCULAR_VALOR_TOTAL
            double valor_total=0;
            for (int i=0; i < jItens.getRowCount(); i++){
                double Amount = (double) jItens.getValueAt(i, 4);
                valor_total = valor_total + Amount;
            }
            
            //CALCULAR_DESCONTO2
                //IDENTIFICAR_LOCALIDADE
                Object local = jLocalidade.getSelectedItem();
                String querylocal = "select CODLOCAL from Localidade where NAME like ?";
                PreparedStatement pstlocal;
                pstlocal = (PreparedStatement) conn.prepareStatement(querylocal);
                pstlocal.setString(1, "%" + local + "%");
                ResultSet rslocal = pstlocal.executeQuery();
            
            String codlocal = rslocal.getString("codlocal");
            String lnprod = rsprod.getString("codlocal");
            
            if (codlocal.equals(lnprod)){
                JOptionPane.showMessageDialog(rootPane, "Desconto de 10% aplicado.");
                valor_total = valor_total - (valor_total * 0.1);
            }
                        
            jValorTotal.setText(Double.toString(valor_total));
            
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(JFrame_PDV.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jIncluirProdutoMouseClicked

    private void jTextDescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextDescricaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextDescricaoActionPerformed

    private void jExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jExcluirActionPerformed
        //RETIRAR_DO_CARRINHO
        int i = jItens.getSelectedRow();
        if (i>=0){
            DefaultTableModel modelo = (DefaultTableModel) jItens.getModel();
            modelo.removeRow(i);
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "Selecione o produto que deseja remover.");
        }
    }//GEN-LAST:event_jExcluirActionPerformed

    private void jVenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jVenderActionPerformed
        //REGISTRAR_VENDA
        try{
            //Registrar Drive JDBC
            Class.forName("com.mysql.jdbc.Driver");
            
            //Abrindo a conexão
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/pdv","root","root");
            
            //INDENTIFICAR_PRODUTO
            Object prod = jProduto.getSelectedItem();
            String queryprod = "select * from Produto where CODPROD like ?";
            PreparedStatement pstprod;
            pstprod = (PreparedStatement) conn.prepareStatement(queryprod);
            pstprod.setString(1,"%" + prod + "%");
            ResultSet rsprod = pstprod.executeQuery();
            
            //IDENTIFICAR_CLIENTE
            Object cli = jCliente.getSelectedItem();
            String querycli = "select CODCLI from Cliente where NAME like ?";
            PreparedStatement pstcli;
            pstcli = (PreparedStatement) conn.prepareStatement(querycli);
            pstcli.setString(1, "%" + cli + "%");
            ResultSet rscli = pstcli.executeQuery();

            //IDENTIFICAR_LOCALIDADE
            Object local = jLocalidade.getSelectedItem();
            String querylocal = "select CODLOCAL from Localidade where NAME like ?";
            PreparedStatement pstlocal;
            pstlocal = (PreparedStatement) conn.prepareStatement(querylocal);
            pstlocal.setString(1, "%" + local + "%");
            ResultSet rslocal = pstlocal.executeQuery();
            
            java.sql.Statement st = conn.createStatement();
        /*  st.executeUpdate("insert into venda (codcli, codprod, codlocal, qtd_venda, valor_total) values ("
                             + this.jCliente.getSelectedItem() + ",'"
                             + this.jProduto.getSelectedItem() + "','"
                             + this.jLocalidade.getSelectedItem() + "','"
                             + this.jQuantidade.getText() + "','"
                             + this.jValorTotal.getText() + "')");
        */  st.executeUpdate("insert into venda (codcli, codprod, codlocal, qtd_venda, valor_total) values ("
                             + rscli.getString("codcli") + ",'"
                             + rsprod.getString("codprod") + ",'"
                             + rslocal.getString("codlocal") + ",'"
                             + this.jQuantidade.getText() + ",'"
                             + this.jValorTotal.getText() + "')"
                             );
        
            //TRATAR_ESTOQUE
        /*    int qnt_estoque = Integer.parseInt(rsprod.getString("QTD_ESTOQUE"));
            int qnt = Integer.parseInt(jQuantidade.getText());
            int estoque = qnt_estoque - qnt;
            st.executeUpdate("insert into produto (QTD_ESTOQUE) value" + estoque + "')");
        */
             st.executeUpdate("update Produto set QTD_ESTOQUE = QTD_ESTOQUE -"
                             + Integer.parseInt(jQuantidade.getText()) + "where codprod like "
                             + Integer.parseInt(rsprod.getString("codprod"))+ "')"
                             );
        
            JOptionPane.showMessageDialog(rootPane, "Venda realizada com sucesso!");
        
                
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(JFrame_PDV.class.getName()).log(Level.SEVERE, null, ex);
        }   
            
    }//GEN-LAST:event_jVenderActionPerformed

    private void jSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSairActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jSairActionPerformed

    private void jCancelarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCancelarVendaActionPerformed
        // TODO add your handling code here:
        jItens.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        DefaultTableModel modelo = (DefaultTableModel) jItens.getModel();
        modelo.setNumRows(0);
        jQuantidade.setText("");
        jCliente.setSelectedItem("0");
        jLocalidade.setSelectedItem("0");
        jProduto.setSelectedItem("0");
    }//GEN-LAST:event_jCancelarVendaActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame_PDV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new JFrame_PDV().setVisible(true);
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jCancelarVenda;
    private javax.swing.JComboBox<String> jCliente;
    private javax.swing.JButton jExcluir;
    private javax.swing.JButton jIncluirProduto;
    private javax.swing.JTable jItens;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JComboBox<String> jLocalidade;
    private javax.swing.JComboBox<String> jProduto;
    private javax.swing.JTextField jQuantidade;
    private javax.swing.JButton jSair;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextDescricao;
    private javax.swing.JTextField jValorTotal;
    private javax.swing.JButton jVender;
    // End of variables declaration//GEN-END:variables
}
